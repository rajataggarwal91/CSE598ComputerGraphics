varying vec3 N;
jkhkjjkk
varying vec3 v;    

uniform sampler2D color_texture;

uniform vec4 color1 = vec4(0.0, 0.0, 1.0, 1.0);
uniform vec4 color2 = vec4(0.3, 0.7, 0.5, 1.0);
 
out vec4 colorOut;

void main (void)  
{  

   //Ross: Here's a hint on how to get the light source position
   //gl_LightSource[0].position.xyz;   

   //Ross: V is the view direction vector and we are in Eye Coordinates, so EyePos is (0,0,0)  
 
   //calculate Ambient Term:  

   //calculate Diffuse Term:  
   
   //calculate Specular Term:

   // write Total Color:  
   //colorOut = gl_FrontLightModelProduct.sceneColor;

   //Ross: If I want to sample my texture, I need to sample it at the (s,t) coordinate of my texture coordinate
   //texture2D(color_texture, gl_TexCoord[0].st);  

   //Ross: Generic color output is now making all geometry blue
   colorOut = color1;


}    
